{"remainingRequest":"/home/codex/local-food-service/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/codex/local-food-service/client/src/components/Marketplace.vue?vue&type=style&index=0&id=11a2aacb&lang=scss&scoped=true&","dependencies":[{"path":"/home/codex/local-food-service/client/src/components/Marketplace.vue","mtime":1628698294546},{"path":"/home/codex/local-food-service/client/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/codex/local-food-service/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/codex/local-food-service/client/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/codex/local-food-service/client/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/codex/local-food-service/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/codex/local-food-service/client/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb250YWluZXIgewogIGdyaWQtYXJlYTogbWFya2V0cGxhY2U7CiAgZGlzcGxheTogZ3JpZDsKICBncmlkLXRlbXBsYXRlLXJvd3M6IG1pbm1heCgyNTBweCwgMWZyKSBtaW5tYXgoMjUwcHgsIDFmcik7Cn0KLnByb2R1Y3RzLWxpc3QgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBvdmVyZmxvdy15OiBzY3JvbGw7Cn0K"},{"version":3,"sources":["Marketplace.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Marketplace.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <ProductPopup\n      v-if=\"isProductPopupVisible\"\n      :switchProductPopup=\"switchProductPopup\"\n      :selectedProduct=\"selectedProduct\"\n    />\n    <GmapMap\n      v-if=\"productsList.length > 0\"\n      :center=\"{\n        lat: this.currentCoordinates.lat,\n        lng: this.currentCoordinates.lng,\n      }\"\n      :zoom=\"9\"\n      style=\"width: 100%\"\n    >\n      <GmapMarker\n        v-for=\"(product, index) in productsList\"\n        :key=\"index\"\n        :position=\"product.location\"\n        @click=\"switchProductPopup(product)\"\n      />\n    </GmapMap>\n    <div class=\"products-list\">\n      <Product\n        v-for=\"(product, index) in productsList\"\n        :key=\"index\"\n        :name=\"product.name\"\n        :price=\"product.price\"\n        :location=\"product.location\"\n        :description=\"product.description\"\n        :id=\"product._id\"\n        :ownerId=\"product.ownerId\"\n        :highlightedItemId=\"highlightedItemId\"\n        :switchProductPopup=\"switchProductPopup\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\nimport Product from './Product.vue';\nimport ProductPopup from './ProductPopup.vue';\nexport default {\n  name: 'Marketplace',\n  components: {\n    Product,\n    ProductPopup,\n  },\n  data: function () {\n    return {\n      highlightedItemId: '',\n      isProductPopupVisible: false,\n      selectedProduct: {},\n    };\n  },\n  methods: {\n    ...mapActions(['fetchProducts']),\n    ...mapMutations(['updateCurrentCoordinates']),\n    getCurrentLocation: function () {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.updateCurrentCoordinates({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    },\n    switchProductPopup: function (product) {\n      this.selectedProduct = product;\n      this.isProductPopupVisible = !this.isProductPopupVisible;\n      if (product) {\n        this.highlightedItemId = product._id;\n      } else {\n        this.highlightedItemId = '';\n      }\n    },\n  },\n  computed: {\n    ...mapGetters(['productsList', 'currentCoordinates']),\n  },\n  mounted() {\n    this.getCurrentLocation();\n  },\n  watch: {\n    currentCoordinates: function (value) {\n      this.fetchProducts({\n        lat: value.lat,\n        lng: value.lng,\n        name: '',\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  grid-area: marketplace;\n  display: grid;\n  grid-template-rows: minmax(250px, 1fr) minmax(250px, 1fr);\n}\n.products-list {\n  display: flex;\n  flex-direction: column;\n  overflow-y: scroll;\n}\n</style>\n"]}]}