{"remainingRequest":"/home/codex/client/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/codex/client/src/components/Marketplace.vue?vue&type=style&index=0&id=11a2aacb&lang=scss&scoped=true&","dependencies":[{"path":"/home/codex/client/src/components/Marketplace.vue","mtime":1628673136672},{"path":"/home/codex/client/node_modules/css-loader/dist/cjs.js","mtime":1628673132908},{"path":"/home/codex/client/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1628673136280},{"path":"/home/codex/client/node_modules/postcss-loader/src/index.js","mtime":1628673134624},{"path":"/home/codex/client/node_modules/sass-loader/dist/cjs.js","mtime":1628673135696},{"path":"/home/codex/client/node_modules/cache-loader/dist/cjs.js","mtime":1628673132188},{"path":"/home/codex/client/node_modules/vue-loader/lib/index.js","mtime":1628673136280}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmNvbnRhaW5lciB7CiAgZ3JpZC1hcmVhOiBtYXJrZXRwbGFjZTsKfQoucHJvZHVjdHMtbGlzdCB7CiAgZGlzcGxheTogZ3JpZDsKICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdChhdXRvLWZpbGwsIDMwMHB4KTsKICBncmlkLWF1dG8tcm93czogMzUwcHg7CiAgZ2FwOiAxZW07CiAgcGFkZGluZzogMWVtOwp9Cg=="},{"version":3,"sources":["Marketplace.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Marketplace.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div class=\"container\">\n    <GmapMap\n      :center=\"{\n        lat: this.currentCoordinates.lat,\n        lng: this.currentCoordinates.lng,\n      }\"\n      :zoom=\"9\"\n      style=\"width: 100%; height: 450px\"\n    >\n      <GmapMarker\n        v-for=\"(product, index) in productsList\"\n        :key=\"index\"\n        :position=\"product.location\"\n        @click=\"logMarker(product)\"\n      />\n    </GmapMap>\n    <div class=\"products-list\">\n      <Product\n        v-for=\"(product, index) in productsList\"\n        :key=\"index\"\n        :name=\"product.name\"\n        :price=\"product.price\"\n        :location=\"product.location\"\n        :description=\"product.description\"\n      />\n    </div>\n  </div>\n</template>\n\n<script>\nimport { mapGetters, mapActions, mapMutations } from 'vuex';\nimport Product from './Product.vue';\nexport default {\n  name: 'Marketplace',\n  components: {\n    Product,\n  },\n  methods: {\n    ...mapActions(['fetchProducts']),\n    ...mapMutations(['updateCurrentCoordinates']),\n    logMarker: function (product) {\n      console.log('product info: ', product);\n    },\n    getCurrentLocation: function () {\n      navigator.geolocation.getCurrentPosition(position => {\n        this.updateCurrentCoordinates({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude,\n        });\n      });\n    },\n  },\n  computed: {\n    ...mapGetters(['productsList', 'currentCoordinates']),\n  },\n  mounted() {\n    this.getCurrentLocation();\n  },\n  watch: {\n    currentCoordinates: function (value) {\n      this.fetchProducts({\n        lat: value.lat,\n        lng: value.lng,\n        name: '',\n      });\n    },\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.container {\n  grid-area: marketplace;\n}\n.products-list {\n  display: grid;\n  grid-template-columns: repeat(auto-fill, 300px);\n  grid-auto-rows: 350px;\n  gap: 1em;\n  padding: 1em;\n}\n</style>\n"]}]}