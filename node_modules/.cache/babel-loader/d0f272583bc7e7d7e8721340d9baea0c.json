{"remainingRequest":"/home/codex/local-food-service/client/node_modules/babel-loader/lib/index.js!/home/codex/local-food-service/client/node_modules/eslint-loader/index.js??ref--13-0!/home/codex/local-food-service/client/src/store/modules/user.js","dependencies":[{"path":"/home/codex/local-food-service/client/src/store/modules/user.js","mtime":1628698294546},{"path":"/home/codex/local-food-service/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/codex/local-food-service/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/codex/local-food-service/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2NvZGV4L2xvY2FsLWZvb2Qtc2VydmljZS9jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCB7IHNldFdpdGhFeHBpcnkgfSBmcm9tICcuLi8uLi9oZWxwZXJzL2hlbHBlcnMnOwppbXBvcnQgcmVxdWVzdHMgZnJvbSAnLi4vLi4vc2VydmljZXMvcmVxdWVzdHMnOwp2YXIgdXNlciA9IHsKICBzdGF0ZTogewogICAgY3VycmVudFVzZXI6IG51bGwsCiAgICBjdXJyZW50Q29vcmRpbmF0ZXM6IHsKICAgICAgbGF0OiAwLAogICAgICBsbmc6IDAKICAgIH0KICB9LAogIG11dGF0aW9uczogewogICAgdXBkYXRlQ3VycmVudFVzZXI6IGZ1bmN0aW9uIHVwZGF0ZUN1cnJlbnRVc2VyKHN0YXRlLCB1c2VyKSB7CiAgICAgIHN0YXRlLmN1cnJlbnRVc2VyID0gdXNlcjsKICAgIH0sCiAgICBsb2dvdXQ6IGZ1bmN0aW9uIGxvZ291dChzdGF0ZSkgewogICAgICBsb2NhbFN0b3JhZ2UucmVtb3ZlSXRlbSgndG9rZW4nKTsKICAgICAgc3RhdGUuY3VycmVudFVzZXIgPSBudWxsOwogICAgfSwKICAgIHVwZGF0ZUN1cnJlbnRDb29yZGluYXRlczogZnVuY3Rpb24gdXBkYXRlQ3VycmVudENvb3JkaW5hdGVzKHN0YXRlLCBjb29yZGluYXRlcykgewogICAgICBzdGF0ZS5jdXJyZW50Q29vcmRpbmF0ZXMgPSB7CiAgICAgICAgbGF0OiBjb29yZGluYXRlcy5sYXQsCiAgICAgICAgbG5nOiBjb29yZGluYXRlcy5sbmcKICAgICAgfTsKICAgIH0KICB9LAogIGFjdGlvbnM6IHsKICAgIHJlZ2lzdHJhdGlvbjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX3JlZ2lzdHJhdGlvbiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmLCBuZXdVc2VyKSB7CiAgICAgICAgdmFyIGRpc3BhdGNoLCByZXNwb25zZTsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBkaXNwYXRjaCA9IF9yZWYuZGlzcGF0Y2g7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0cy5yZWdpc3RyYXRpb24obmV3VXNlcik7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT09IDIwMSkgZGlzcGF0Y2goJ2F1dGhvcml6YXRpb24nLCB7CiAgICAgICAgICAgICAgICAgIGVtYWlsOiBuZXdVc2VyID09PSBudWxsIHx8IG5ld1VzZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5ld1VzZXIuZW1haWwsCiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBuZXdVc2VyID09PSBudWxsIHx8IG5ld1VzZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IG5ld1VzZXIucGFzc3dvcmQKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gcmVnaXN0cmF0aW9uKF94LCBfeDIpIHsKICAgICAgICByZXR1cm4gX3JlZ2lzdHJhdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gcmVnaXN0cmF0aW9uOwogICAgfSgpLAogICAgYXV0aG9yaXphdGlvbjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2F1dGhvcml6YXRpb24gPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUyKF9yZWYyLCB1c2VyRGF0YSkgewogICAgICAgIHZhciBfZGF0YSR1c2VyLCBfZGF0YSR1c2VyMiwgX2RhdGEkdXNlcjMsIF9kYXRhJHVzZXI0LCBfZGF0YSR1c2VyNTsKCiAgICAgICAgdmFyIGNvbW1pdCwgX3lpZWxkJHJlcXVlc3RzJGF1dGhvLCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RzLmF1dGhvcml6YXRpb24odXNlckRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBfeWllbGQkcmVxdWVzdHMkYXV0aG8gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkcmVxdWVzdHMkYXV0aG8uZGF0YTsKICAgICAgICAgICAgICAgIHNldFdpdGhFeHBpcnkoJ3Rva2VuJywgZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZUN1cnJlbnRVc2VyJywgewogICAgICAgICAgICAgICAgICBpZDogZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RhdGEkdXNlciA9IGRhdGEudXNlcikgPT09IG51bGwgfHwgX2RhdGEkdXNlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RhdGEkdXNlci5faWQsCiAgICAgICAgICAgICAgICAgIGVtYWlsOiBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGF0YSR1c2VyMiA9IGRhdGEudXNlcikgPT09IG51bGwgfHwgX2RhdGEkdXNlcjIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRhJHVzZXIyLmVtYWlsLAogICAgICAgICAgICAgICAgICBjb3VudHJ5OiBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGF0YSR1c2VyMyA9IGRhdGEudXNlcikgPT09IG51bGwgfHwgX2RhdGEkdXNlcjMgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRhJHVzZXIzLmNvdW50cnksCiAgICAgICAgICAgICAgICAgIGNpdHk6IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kYXRhJHVzZXI0ID0gZGF0YS51c2VyKSA9PT0gbnVsbCB8fCBfZGF0YSR1c2VyNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RhdGEkdXNlcjQuY2l0eSwKICAgICAgICAgICAgICAgICAgYWNjb3VudFR5cGU6IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kYXRhJHVzZXI1ID0gZGF0YS51c2VyKSA9PT0gbnVsbCB8fCBfZGF0YSR1c2VyNSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RhdGEkdXNlcjUuYWNjb3VudFR5cGUKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBhdXRob3JpemF0aW9uKF94MywgX3g0KSB7CiAgICAgICAgcmV0dXJuIF9hdXRob3JpemF0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBhdXRob3JpemF0aW9uOwogICAgfSgpLAogICAgZmV0Y2hDdXJyZW50VXNlcjogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2ZldGNoQ3VycmVudFVzZXIgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKF9yZWYzKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgX3lpZWxkJHJlcXVlc3RzJGdldFVzLCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTMkKF9jb250ZXh0MykgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDMucHJldiA9IF9jb250ZXh0My5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjMuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSAxOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RzLmdldFVzZXIoKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgX3lpZWxkJHJlcXVlc3RzJGdldFVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJHJlcXVlc3RzJGdldFVzLmRhdGE7CiAgICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZUN1cnJlbnRVc2VyJywgZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiBkYXRhLnVzZXIpOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSAxMjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDk7CiAgICAgICAgICAgICAgICBfY29udGV4dDMudDAgPSBfY29udGV4dDNbImNhdGNoIl0oMSk7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ3VzZXIuanMgZmV0Y2hDdXJyZW50VXNlcigpIHwgJywgX2NvbnRleHQzLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxMjoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0My5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMywgbnVsbCwgW1sxLCA5XV0pOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiBmZXRjaEN1cnJlbnRVc2VyKF94NSkgewogICAgICAgIHJldHVybiBfZmV0Y2hDdXJyZW50VXNlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZmV0Y2hDdXJyZW50VXNlcjsKICAgIH0oKQogIH0sCiAgZ2V0dGVyczogewogICAgdXNlcjogZnVuY3Rpb24gdXNlcihzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY3VycmVudFVzZXI7CiAgICB9LAogICAgY3VycmVudENvb3JkaW5hdGVzOiBmdW5jdGlvbiBjdXJyZW50Q29vcmRpbmF0ZXMoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmN1cnJlbnRDb29yZGluYXRlczsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHVzZXI7"},{"version":3,"sources":["/home/codex/local-food-service/client/src/store/modules/user.js"],"names":["setWithExpiry","requests","user","state","currentUser","currentCoordinates","lat","lng","mutations","updateCurrentUser","logout","localStorage","removeItem","updateCurrentCoordinates","coordinates","actions","registration","newUser","dispatch","response","status","email","password","authorization","userData","commit","data","token","id","_id","country","city","accountType","fetchCurrentUser","getUser","Error","getters"],"mappings":"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","sourcesContent":["import { setWithExpiry } from '../../helpers/helpers';\nimport requests from '../../services/requests';\n\nconst user = {\n  state: {\n    currentUser: null,\n    currentCoordinates: {\n      lat: 0,\n      lng: 0,\n    },\n  },\n  mutations: {\n    updateCurrentUser: function (state, user) {\n      state.currentUser = user;\n    },\n    logout: function (state) {\n      localStorage.removeItem('token');\n      state.currentUser = null;\n    },\n    updateCurrentCoordinates: function (state, coordinates) {\n      state.currentCoordinates = {\n        lat: coordinates.lat,\n        lng: coordinates.lng,\n      };\n    },\n  },\n  actions: {\n    registration: async function ({ dispatch }, newUser) {\n      const response = await requests.registration(newUser);\n      if (response.status === 201)\n        dispatch('authorization', {\n          email: newUser?.email,\n          password: newUser?.password,\n        });\n    },\n    authorization: async function ({ commit }, userData) {\n      const { data } = await requests.authorization(userData);\n      setWithExpiry('token', data.token);\n      commit('updateCurrentUser', {\n        id: data?.user?._id,\n        email: data?.user?.email,\n        country: data?.user?.country,\n        city: data?.user?.city,\n        accountType: data?.user?.accountType,\n      });\n    },\n    fetchCurrentUser: async function ({ commit }) {\n      try {\n        const { data } = await requests.getUser();\n        commit('updateCurrentUser', data?.user);\n      } catch (error) {\n        throw new Error('user.js fetchCurrentUser() | ', error);\n      }\n    },\n  },\n  getters: {\n    user: state => state.currentUser,\n    currentCoordinates: state => state.currentCoordinates,\n  },\n};\n\nexport default user;\n"]}]}