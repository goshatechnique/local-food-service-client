{"remainingRequest":"/home/codex/local-food-service/local-food-service/node_modules/babel-loader/lib/index.js!/home/codex/local-food-service/local-food-service/node_modules/eslint-loader/index.js??ref--13-0!/home/codex/local-food-service/local-food-service/src/services/api.js","dependencies":[{"path":"/home/codex/local-food-service/local-food-service/src/services/api.js","mtime":1628014969457},{"path":"/home/codex/local-food-service/local-food-service/node_modules/cache-loader/dist/cjs.js","mtime":1628014965353},{"path":"/home/codex/local-food-service/local-food-service/node_modules/babel-loader/lib/index.js","mtime":1628014965169},{"path":"/home/codex/local-food-service/local-food-service/node_modules/eslint-loader/index.js","mtime":1628014966321}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKdmFyIGF4aW9zX2FwaSA9IGF4aW9zLmNyZWF0ZSh7CiAgaGVhZGVyczogewogICAgJ0NvbnRlbnQtVHlwZSc6ICdhcHBsaWNhdGlvbi9qc29uJwogIH0sCiAgYmFzZVVSTDogJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MScKfSk7CmF4aW9zX2FwaS5pbnRlcmNlcHRvcnMucmVzcG9uc2UudXNlKG51bGwsIGZ1bmN0aW9uIChlcnJvcikgewogIGNvbnNvbGUuZXJyb3IoJ2FwaS5qcyBpbnRlcmNlcHRvcnMgfCBFcnJvcjogJywgZXJyb3IpOwogIHJldHVybiBlcnJvcjsKfSk7CmV4cG9ydCBkZWZhdWx0IChmdW5jdGlvbiAoKSB7CiAgcmV0dXJuIGF4aW9zX2FwaTsKfSk7"},{"version":3,"sources":["/home/codex/local-food-service/local-food-service/src/services/api.js"],"names":["axios","axios_api","create","headers","baseURL","interceptors","response","use","error","console"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,SAAS,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC7BC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT,GADoB;AAI7BC,EAAAA,OAAO,EAAE;AAJoB,CAAb,CAAlB;AAOAH,SAAS,CAACI,YAAV,CAAuBC,QAAvB,CAAgCC,GAAhC,CAAoC,IAApC,EAA0C,UAACC,KAAD,EAAW;AACnDC,EAAAA,OAAO,CAACD,KAAR,CAAc,+BAAd,EAA+CA,KAA/C;AACA,SAAOA,KAAP;AACD,CAHD;AAKA,gBAAe;AAAA,SAAMP,SAAN;AAAA,CAAf","sourcesContent":["import axios from 'axios';\n\nconst axios_api = axios.create({\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  baseURL: 'http://localhost:8081',\n});\n\naxios_api.interceptors.response.use(null, (error) => {\n  console.error('api.js interceptors | Error: ', error);\n  return error;\n});\n\nexport default () => axios_api;\n"]}]}