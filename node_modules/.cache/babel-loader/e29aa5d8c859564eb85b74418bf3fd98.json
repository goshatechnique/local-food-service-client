{"remainingRequest":"/home/codex/client/node_modules/babel-loader/lib/index.js!/home/codex/client/node_modules/eslint-loader/index.js??ref--13-0!/home/codex/client/src/store/modules/user.js","dependencies":[{"path":"/home/codex/client/src/store/modules/user.js","mtime":1628257301102},{"path":"/home/codex/client/node_modules/cache-loader/dist/cjs.js","mtime":1628095767212},{"path":"/home/codex/client/node_modules/babel-loader/lib/index.js","mtime":1628095767080},{"path":"/home/codex/client/node_modules/eslint-loader/index.js","mtime":1628095768188}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2NvZGV4L2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgc2V0V2l0aEV4cGlyeSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvc3RvcmFnZSc7CmltcG9ydCByZXF1ZXN0cyBmcm9tICcuLi8uLi9zZXJ2aWNlcy9yZXF1ZXN0cyc7CnZhciB1c2VyID0gewogIHN0YXRlOiB7CiAgICBjdXJyZW50VXNlcjogbnVsbAogIH0sCiAgbXV0YXRpb25zOiB7CiAgICB1cGRhdGVDdXJyZW50VXNlcjogZnVuY3Rpb24gdXBkYXRlQ3VycmVudFVzZXIoc3RhdGUsIHVzZXIpIHsKICAgICAgc3RhdGUuY3VycmVudFVzZXIgPSB1c2VyOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KHN0YXRlKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpOwogICAgICBzdGF0ZS5jdXJyZW50VXNlciA9IHt9OwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgcmVnaXN0cmF0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVnaXN0cmF0aW9uID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYsIG5ld1VzZXIpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RzLnJlZ2lzdHJhdGlvbihuZXdVc2VyKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAxKSBkaXNwYXRjaCgnYXV0aG9yaXphdGlvbicsIHsKICAgICAgICAgICAgICAgICAgZW1haWw6IG5ld1VzZXIuZW1haWwsCiAgICAgICAgICAgICAgICAgIHBhc3N3b3JkOiBuZXdVc2VyLnBhc3N3b3JkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHJlZ2lzdHJhdGlvbihfeCwgX3gyKSB7CiAgICAgICAgcmV0dXJuIF9yZWdpc3RyYXRpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIHJlZ2lzdHJhdGlvbjsKICAgIH0oKSwKICAgIGF1dGhvcml6YXRpb246IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9hdXRob3JpemF0aW9uID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihfcmVmMiwgdXNlckRhdGEpIHsKICAgICAgICB2YXIgX2RhdGEkdXNlciwgX2RhdGEkdXNlcjIsIF9kYXRhJHVzZXIzLCBfZGF0YSR1c2VyNCwgX2RhdGEkdXNlcjU7CgogICAgICAgIHZhciBjb21taXQsIF95aWVsZCRyZXF1ZXN0cyRhdXRobywgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUyJChfY29udGV4dDIpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYyLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMzsKICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0cy5hdXRob3JpemF0aW9uKHVzZXJEYXRhKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgX3lpZWxkJHJlcXVlc3RzJGF1dGhvID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICBkYXRhID0gX3lpZWxkJHJlcXVlc3RzJGF1dGhvLmRhdGE7CiAgICAgICAgICAgICAgICBzZXRXaXRoRXhwaXJ5KCd0b2tlbicsIGRhdGEudG9rZW4pOwogICAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVDdXJyZW50VXNlcicsIHsKICAgICAgICAgICAgICAgICAgaWQ6IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kYXRhJHVzZXIgPSBkYXRhLnVzZXIpID09PSBudWxsIHx8IF9kYXRhJHVzZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRhJHVzZXIuX2lkLAogICAgICAgICAgICAgICAgICBlbWFpbDogZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RhdGEkdXNlcjIgPSBkYXRhLnVzZXIpID09PSBudWxsIHx8IF9kYXRhJHVzZXIyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGF0YSR1c2VyMi5lbWFpbCwKICAgICAgICAgICAgICAgICAgY291bnRyeTogZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RhdGEkdXNlcjMgPSBkYXRhLnVzZXIpID09PSBudWxsIHx8IF9kYXRhJHVzZXIzID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGF0YSR1c2VyMy5jb3VudHJ5LAogICAgICAgICAgICAgICAgICBjaXR5OiBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGF0YSR1c2VyNCA9IGRhdGEudXNlcikgPT09IG51bGwgfHwgX2RhdGEkdXNlcjQgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRhJHVzZXI0LmNpdHksCiAgICAgICAgICAgICAgICAgIGFjY291bnRUeXBlOiBkYXRhID09PSBudWxsIHx8IGRhdGEgPT09IHZvaWQgMCA/IHZvaWQgMCA6IChfZGF0YSR1c2VyNSA9IGRhdGEudXNlcikgPT09IG51bGwgfHwgX2RhdGEkdXNlcjUgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRhJHVzZXI1LmFjY291bnRUeXBlCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA3OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gYXV0aG9yaXphdGlvbihfeDMsIF94NCkgewogICAgICAgIHJldHVybiBfYXV0aG9yaXphdGlvbi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gYXV0aG9yaXphdGlvbjsKICAgIH0oKSwKICAgIGZldGNoQ3VycmVudFVzZXI6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9mZXRjaEN1cnJlbnRVc2VyID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhfcmVmMykgewogICAgICAgIHZhciBjb21taXQsIF95aWVsZCRyZXF1ZXN0cyRnZXRVcywgZGF0YTsKCiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0cy5nZXRVc2VyKCk7CgogICAgICAgICAgICAgIGNhc2UgNDoKICAgICAgICAgICAgICAgIF95aWVsZCRyZXF1ZXN0cyRnZXRVcyA9IF9jb250ZXh0My5zZW50OwogICAgICAgICAgICAgICAgZGF0YSA9IF95aWVsZCRyZXF1ZXN0cyRnZXRVcy5kYXRhOwogICAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVDdXJyZW50VXNlcicsIGRhdGEudXNlcik7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0My5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My50MCA9IF9jb250ZXh0M1siY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ3VzZXIuanMgZmV0Y2hDdXJyZW50VXNlcigpIHwgRXJyb3I6ICcsIF9jb250ZXh0My50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMsIG51bGwsIFtbMSwgOV1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZmV0Y2hDdXJyZW50VXNlcihfeDUpIHsKICAgICAgICByZXR1cm4gX2ZldGNoQ3VycmVudFVzZXIuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZldGNoQ3VycmVudFVzZXI7CiAgICB9KCkKICB9LAogIGdldHRlcnM6IHsKICAgIHVzZXI6IGZ1bmN0aW9uIHVzZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmN1cnJlbnRVc2VyOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgdXNlcjs="},{"version":3,"sources":["/home/codex/client/src/store/modules/user.js"],"names":["setWithExpiry","requests","user","state","currentUser","mutations","updateCurrentUser","logout","localStorage","removeItem","actions","registration","newUser","dispatch","response","status","email","password","authorization","userData","commit","data","token","id","_id","country","city","accountType","fetchCurrentUser","getUser","console","error","getters"],"mappings":"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","sourcesContent":["import { setWithExpiry } from '../../helpers/storage';\nimport requests from '../../services/requests';\n\nconst user = {\n  state: {\n    currentUser: null,\n  },\n  mutations: {\n    updateCurrentUser: function (state, user) {\n      state.currentUser = user;\n    },\n    logout: function (state) {\n      localStorage.removeItem('token');\n      state.currentUser = {};\n    },\n  },\n  actions: {\n    registration: async function ({ dispatch }, newUser) {\n      const response = await requests.registration(newUser);\n      if (response.status === 201)\n        dispatch('authorization', {\n          email: newUser.email,\n          password: newUser.password,\n        });\n    },\n    authorization: async function ({ commit }, userData) {\n      const { data } = await requests.authorization(userData);\n      setWithExpiry('token', data.token);\n      commit('updateCurrentUser', {\n        id: data?.user?._id,\n        email: data?.user?.email,\n        country: data?.user?.country,\n        city: data?.user?.city,\n        accountType: data?.user?.accountType,\n      });\n    },\n    fetchCurrentUser: async function ({ commit }) {\n      try {\n        const { data } = await requests.getUser();\n        commit('updateCurrentUser', data.user);\n      } catch (error) {\n        console.error('user.js fetchCurrentUser() | Error: ', error);\n      }\n    },\n  },\n  getters: {\n    user: (state) => state.currentUser,\n  },\n};\n\nexport default user;\n"]}]}