{"remainingRequest":"/home/codex/local-food-service/client/node_modules/babel-loader/lib/index.js!/home/codex/local-food-service/client/node_modules/eslint-loader/index.js??ref--13-0!/home/codex/local-food-service/client/src/store/modules/products.js","dependencies":[{"path":"/home/codex/local-food-service/client/src/store/modules/products.js","mtime":1629206426324},{"path":"/home/codex/local-food-service/client/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/codex/local-food-service/client/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/home/codex/local-food-service/client/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2NvZGV4L2xvY2FsLWZvb2Qtc2VydmljZS9jbGllbnQvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmNvbmNhdC5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmFycmF5LmZpbHRlci5qcyI7CmltcG9ydCByZXF1ZXN0cyBmcm9tICcuLi8uLi9zZXJ2aWNlcy9yZXF1ZXN0cyc7CnZhciBwcm9kdWN0cyA9IHsKICBzdGF0ZTogewogICAgcHJvZHVjdHNMaXN0OiBbXSwKICAgIHNlYXJjaFN0cmluZzogJycsCiAgICBwYWdlTnVtYmVyOiAxLAogICAgaXNMb2FkaW5nOiBmYWxzZQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICB1cGRhdGVQcm9kdWN0c0xpc3Q6IGZ1bmN0aW9uIHVwZGF0ZVByb2R1Y3RzTGlzdChzdGF0ZSwgX3JlZikgewogICAgICB2YXIgcHJvZHVjdHMgPSBfcmVmLnByb2R1Y3RzLAogICAgICAgICAgcGFnZU51bWJlciA9IF9yZWYucGFnZU51bWJlcjsKCiAgICAgIGlmIChwYWdlTnVtYmVyID09PSAxKSB7CiAgICAgICAgc3RhdGUucHJvZHVjdHNMaXN0ID0gcHJvZHVjdHM7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgc3RhdGUucHJvZHVjdHNMaXN0ID0gc3RhdGUucHJvZHVjdHNMaXN0LmNvbmNhdChwcm9kdWN0cyk7CiAgICAgIH0KICAgIH0sCiAgICBhZGRQcm9kdWN0TWFudWFsOiBmdW5jdGlvbiBhZGRQcm9kdWN0TWFudWFsKHN0YXRlLCBuZXdQcm9kdWN0KSB7CiAgICAgIHN0YXRlLnByb2R1Y3RzTGlzdC5wdXNoKG5ld1Byb2R1Y3QpOwogICAgfSwKICAgIGRlbGV0ZVByb2R1Y3RNYW51YWw6IGZ1bmN0aW9uIGRlbGV0ZVByb2R1Y3RNYW51YWwoc3RhdGUsIGlkKSB7CiAgICAgIHN0YXRlLnByb2R1Y3RzTGlzdCA9IHN0YXRlLnByb2R1Y3RzTGlzdC5maWx0ZXIoZnVuY3Rpb24gKHByb2R1Y3QpIHsKICAgICAgICByZXR1cm4gcHJvZHVjdC5faWQgIT09IGlkOwogICAgICB9KTsKICAgIH0sCiAgICB1cGRhdGVTZWFyY2hTdHJpbmc6IGZ1bmN0aW9uIHVwZGF0ZVNlYXJjaFN0cmluZyhzdGF0ZSwgdmFsdWUpIHsKICAgICAgc3RhdGUuc2VhcmNoU3RyaW5nID0gdmFsdWU7CiAgICB9LAogICAgdXBkYXRlUGFnZU51bWJlcjogZnVuY3Rpb24gdXBkYXRlUGFnZU51bWJlcihzdGF0ZSwgdmFsdWUpIHsKICAgICAgc3RhdGUucGFnZU51bWJlciA9IHZhbHVlOwogICAgfSwKICAgIHJlZnJlc2hQcm9kdWN0czogZnVuY3Rpb24gcmVmcmVzaFByb2R1Y3RzKHN0YXRlKSB7CiAgICAgIHN0YXRlLnByb2R1Y3RzTGlzdCA9IFtdOwogICAgICBzdGF0ZS5zZWFyY2hTdHJpbmcgPSAnJzsKICAgICAgc3RhdGUucGFnZU51bWJlciA9IDE7CiAgICB9LAogICAgc2V0SXNMb2FkaW5nOiBmdW5jdGlvbiBzZXRJc0xvYWRpbmcoc3RhdGUsIHZhbHVlKSB7CiAgICAgIHN0YXRlLmlzTG9hZGluZyA9IHZhbHVlOwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgcG9zdFByb2R1Y3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9wb3N0UHJvZHVjdCA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShfcmVmMiwgcHJvZHVjdEZvcm1EYXRhKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgcmVzcG9uc2U7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNDsKICAgICAgICAgICAgICAgIHJldHVybiByZXF1ZXN0cy5wb3N0UHJvZHVjdChwcm9kdWN0Rm9ybURhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDEpIGNvbW1pdCgnYWRkUHJvZHVjdE1hbnVhbCcsIHJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDExOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgODoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSA4OwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ3Byb2R1Y3RzLmpzIHBvc3RQcm9kdWN0KCkgfCAnLCBfY29udGV4dC50MCk7CgogICAgICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlLCBudWxsLCBbWzEsIDhdXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIHBvc3RQcm9kdWN0KF94LCBfeDIpIHsKICAgICAgICByZXR1cm4gX3Bvc3RQcm9kdWN0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBwb3N0UHJvZHVjdDsKICAgIH0oKSwKICAgIGZldGNoUHJvZHVjdHM6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9mZXRjaFByb2R1Y3RzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihfcmVmMywgcGFyYW1zKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgX3Jlc3BvbnNlJGRhdGEsIF9yZXNwb25zZSRkYXRhMiwgcmVzcG9uc2U7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDE7CiAgICAgICAgICAgICAgICBjb21taXQoJ3NldElzTG9hZGluZycsIHRydWUpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RzLmdldFByb2R1Y3RzKHBhcmFtcyk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQyLnNlbnQ7CiAgICAgICAgICAgICAgICAvLyBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSAyMDApCiAgICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZVByb2R1Y3RzTGlzdCcsIHsKICAgICAgICAgICAgICAgICAgcHJvZHVjdHM6IHJlc3BvbnNlID09PSBudWxsIHx8IHJlc3BvbnNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3Jlc3BvbnNlJGRhdGEgPSByZXNwb25zZS5kYXRhKSA9PT0gbnVsbCB8fCBfcmVzcG9uc2UkZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogX3Jlc3BvbnNlJGRhdGEucHJvZHVjdHMsCiAgICAgICAgICAgICAgICAgIHBhZ2VOdW1iZXI6IHJlc3BvbnNlID09PSBudWxsIHx8IHJlc3BvbnNlID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX3Jlc3BvbnNlJGRhdGEyID0gcmVzcG9uc2UuZGF0YSkgPT09IG51bGwgfHwgX3Jlc3BvbnNlJGRhdGEyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfcmVzcG9uc2UkZGF0YTIucGFnZU51bWJlcgogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDEyOwogICAgICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgICAgIGNhc2UgOToKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gOTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgxKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ3Byb2R1Y3RzLmpzIHBvc3RQcm9kdWN0KCkgfCAnLCBfY29udGV4dDIudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMjsKICAgICAgICAgICAgICAgIGNvbW1pdCgnc2V0SXNMb2FkaW5nJywgZmFsc2UpOwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5maW5pc2goMTIpOwoKICAgICAgICAgICAgICBjYXNlIDE1OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzEsIDksIDEyLCAxNV1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZmV0Y2hQcm9kdWN0cyhfeDMsIF94NCkgewogICAgICAgIHJldHVybiBfZmV0Y2hQcm9kdWN0cy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZmV0Y2hQcm9kdWN0czsKICAgIH0oKSwKICAgIGRlbGV0ZVByb2R1Y3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9kZWxldGVQcm9kdWN0ID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMyhfcmVmNCwgaWQpIHsKICAgICAgICB2YXIgY29tbWl0OwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmNC5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdHMuZGVsZXRlUHJvZHVjdChpZCk7CgogICAgICAgICAgICAgIGNhc2UgMzoKICAgICAgICAgICAgICAgIGNvbW1pdCgnZGVsZXRlUHJvZHVjdE1hbnVhbCcsIGlkKTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZGVsZXRlUHJvZHVjdChfeDUsIF94NikgewogICAgICAgIHJldHVybiBfZGVsZXRlUHJvZHVjdC5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZGVsZXRlUHJvZHVjdDsKICAgIH0oKQogIH0sCiAgZ2V0dGVyczogewogICAgcHJvZHVjdHNMaXN0OiBmdW5jdGlvbiBwcm9kdWN0c0xpc3Qoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnByb2R1Y3RzTGlzdDsKICAgIH0sCiAgICBzZWFyY2hTdHJpbmc6IGZ1bmN0aW9uIHNlYXJjaFN0cmluZyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuc2VhcmNoU3RyaW5nOwogICAgfSwKICAgIHBhZ2VOdW1iZXI6IGZ1bmN0aW9uIHBhZ2VOdW1iZXIoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLnBhZ2VOdW1iZXI7CiAgICB9LAogICAgaXNMb2FkaW5nOiBmdW5jdGlvbiBpc0xvYWRpbmcoc3RhdGUpIHsKICAgICAgcmV0dXJuIHN0YXRlLmlzTG9hZGluZzsKICAgIH0KICB9Cn07CmV4cG9ydCBkZWZhdWx0IHByb2R1Y3RzOw=="},{"version":3,"sources":["/home/codex/local-food-service/client/src/store/modules/products.js"],"names":["requests","products","state","productsList","searchString","pageNumber","isLoading","mutations","updateProductsList","concat","addProductManual","newProduct","push","deleteProductManual","id","filter","product","_id","updateSearchString","value","updatePageNumber","refreshProducts","setIsLoading","actions","postProduct","productFormData","commit","response","status","data","console","error","fetchProducts","params","getProducts","deleteProduct","getters"],"mappings":"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","sourcesContent":["import requests from '../../services/requests';\n\nconst products = {\n  state: {\n    productsList: [],\n    searchString: '',\n    pageNumber: 1,\n    isLoading: false,\n  },\n  mutations: {\n    updateProductsList: function (state, { products, pageNumber }) {\n      if (pageNumber === 1) {\n        state.productsList = products;\n      } else {\n        state.productsList = state.productsList.concat(products);\n      }\n    },\n    addProductManual: function (state, newProduct) {\n      state.productsList.push(newProduct);\n    },\n    deleteProductManual: function (state, id) {\n      state.productsList = state.productsList.filter(product => product._id !== id);\n    },\n    updateSearchString: function (state, value) {\n      state.searchString = value;\n    },\n    updatePageNumber: function (state, value) {\n      state.pageNumber = value;\n    },\n    refreshProducts: function (state) {\n      state.productsList = [];\n      state.searchString = '';\n      state.pageNumber = 1;\n    },\n    setIsLoading: function (state, value) {\n      state.isLoading = value;\n    },\n  },\n  actions: {\n    postProduct: async function ({ commit }, productFormData) {\n      try {\n        const response = await requests.postProduct(productFormData);\n        if (response.status === 201) commit('addProductManual', response.data);\n      } catch (error) {\n        console.error('products.js postProduct() | ', error);\n      }\n    },\n    fetchProducts: async function ({ commit }, params) {\n      try {\n        commit('setIsLoading', true);\n        const response = await requests.getProducts(params);\n        // if (response.status === 200)\n        commit('updateProductsList', {\n          products: response?.data?.products,\n          pageNumber: response?.data?.pageNumber,\n        });\n      } catch (error) {\n        console.error('products.js postProduct() | ', error);\n      } finally {\n        commit('setIsLoading', false);\n      }\n    },\n    deleteProduct: async function ({ commit }, id) {\n      await requests.deleteProduct(id);\n      commit('deleteProductManual', id);\n    },\n  },\n  getters: {\n    productsList: state => state.productsList,\n    searchString: state => state.searchString,\n    pageNumber: state => state.pageNumber,\n    isLoading: state => state.isLoading,\n  },\n};\n\nexport default products;\n"]}]}