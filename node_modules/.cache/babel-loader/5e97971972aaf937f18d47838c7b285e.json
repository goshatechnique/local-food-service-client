{"remainingRequest":"/home/codex/client/node_modules/babel-loader/lib/index.js!/home/codex/client/node_modules/eslint-loader/index.js??ref--13-0!/home/codex/client/src/store/modules/user.js","dependencies":[{"path":"/home/codex/client/src/store/modules/user.js","mtime":1629208401436},{"path":"/home/codex/client/node_modules/cache-loader/dist/cjs.js","mtime":1629208395336},{"path":"/home/codex/client/node_modules/babel-loader/lib/index.js","mtime":1629208394708},{"path":"/home/codex/client/node_modules/eslint-loader/index.js","mtime":1629208396924}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2NvZGV4L2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IHsgc2V0V2l0aEV4cGlyeSB9IGZyb20gJy4uLy4uL2hlbHBlcnMvaGVscGVycyc7CmltcG9ydCByZXF1ZXN0cyBmcm9tICcuLi8uLi9zZXJ2aWNlcy9yZXF1ZXN0cyc7CnZhciB1c2VyID0gewogIHN0YXRlOiB7CiAgICBjdXJyZW50VXNlcjogbnVsbCwKICAgIGN1cnJlbnRDb29yZGluYXRlczogewogICAgICBsYXQ6IDUzLjcxNjksCiAgICAgIGxuZzogMjcuOTc3NQogICAgfQogIH0sCiAgbXV0YXRpb25zOiB7CiAgICB1cGRhdGVDdXJyZW50VXNlcjogZnVuY3Rpb24gdXBkYXRlQ3VycmVudFVzZXIoc3RhdGUsIHVzZXIpIHsKICAgICAgc3RhdGUuY3VycmVudFVzZXIgPSB1c2VyOwogICAgfSwKICAgIGxvZ291dDogZnVuY3Rpb24gbG9nb3V0KHN0YXRlKSB7CiAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKCd0b2tlbicpOwogICAgICBzdGF0ZS5jdXJyZW50VXNlciA9IG51bGw7CiAgICAgIHN0YXRlLmN1cnJlbnRDb29yZGluYXRlcyA9IHsKICAgICAgICBsYXQ6IDUzLjcxNjksCiAgICAgICAgbG5nOiAyNy45Nzc1CiAgICAgIH07CiAgICB9LAogICAgdXBkYXRlQ3VycmVudENvb3JkaW5hdGVzOiBmdW5jdGlvbiB1cGRhdGVDdXJyZW50Q29vcmRpbmF0ZXMoc3RhdGUsIGNvb3JkaW5hdGVzKSB7CiAgICAgIHN0YXRlLmN1cnJlbnRDb29yZGluYXRlcyA9IHsKICAgICAgICBsYXQ6IGNvb3JkaW5hdGVzLmxhdCwKICAgICAgICBsbmc6IGNvb3JkaW5hdGVzLmxuZwogICAgICB9OwogICAgfQogIH0sCiAgYWN0aW9uczogewogICAgcmVnaXN0cmF0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfcmVnaXN0cmF0aW9uID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKF9yZWYsIG5ld1VzZXIpIHsKICAgICAgICB2YXIgZGlzcGF0Y2gsIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGRpc3BhdGNoID0gX3JlZi5kaXNwYXRjaDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RzLnJlZ2lzdHJhdGlvbihuZXdVc2VyKTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgcmVzcG9uc2UgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLnN0YXR1cyA9PT0gMjAxKSBkaXNwYXRjaCgnYXV0aG9yaXphdGlvbicsIHsKICAgICAgICAgICAgICAgICAgZW1haWw6IG5ld1VzZXIgPT09IG51bGwgfHwgbmV3VXNlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogbmV3VXNlci5lbWFpbCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IG5ld1VzZXIgPT09IG51bGwgfHwgbmV3VXNlciA9PT0gdm9pZCAwID8gdm9pZCAwIDogbmV3VXNlci5wYXNzd29yZAogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSk7CgogICAgICBmdW5jdGlvbiByZWdpc3RyYXRpb24oX3gsIF94MikgewogICAgICAgIHJldHVybiBfcmVnaXN0cmF0aW9uLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiByZWdpc3RyYXRpb247CiAgICB9KCksCiAgICBhdXRob3JpemF0aW9uOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfYXV0aG9yaXphdGlvbiA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoX3JlZjIsIHVzZXJEYXRhKSB7CiAgICAgICAgdmFyIF9kYXRhJHVzZXIsIF9kYXRhJHVzZXIyLCBfZGF0YSR1c2VyMywgX2RhdGEkdXNlcjQsIF9kYXRhJHVzZXI1LCBfZGF0YSR1c2VyNjsKCiAgICAgICAgdmFyIGNvbW1pdCwgX3lpZWxkJHJlcXVlc3RzJGF1dGhvLCBkYXRhOwoKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIHJlcXVlc3RzLmF1dGhvcml6YXRpb24odXNlckRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICBfeWllbGQkcmVxdWVzdHMkYXV0aG8gPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkcmVxdWVzdHMkYXV0aG8uZGF0YTsKICAgICAgICAgICAgICAgIHNldFdpdGhFeHBpcnkoJ3Rva2VuJywgZGF0YS50b2tlbik7CiAgICAgICAgICAgICAgICBjb21taXQoJ3VwZGF0ZUN1cnJlbnRVc2VyJywgewogICAgICAgICAgICAgICAgICBfaWQ6IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kYXRhJHVzZXIgPSBkYXRhLnVzZXIpID09PSBudWxsIHx8IF9kYXRhJHVzZXIgPT09IHZvaWQgMCA/IHZvaWQgMCA6IF9kYXRhJHVzZXIuX2lkLAogICAgICAgICAgICAgICAgICBlbWFpbDogZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RhdGEkdXNlcjIgPSBkYXRhLnVzZXIpID09PSBudWxsIHx8IF9kYXRhJHVzZXIyID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGF0YSR1c2VyMi5lbWFpbCwKICAgICAgICAgICAgICAgICAgcGhvbmVOdW1iZXI6IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kYXRhJHVzZXIzID0gZGF0YS51c2VyKSA9PT0gbnVsbCB8fCBfZGF0YSR1c2VyMyA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RhdGEkdXNlcjMucGhvbmVOdW1iZXIsCiAgICAgICAgICAgICAgICAgIGNvdW50cnk6IGRhdGEgPT09IG51bGwgfHwgZGF0YSA9PT0gdm9pZCAwID8gdm9pZCAwIDogKF9kYXRhJHVzZXI0ID0gZGF0YS51c2VyKSA9PT0gbnVsbCB8fCBfZGF0YSR1c2VyNCA9PT0gdm9pZCAwID8gdm9pZCAwIDogX2RhdGEkdXNlcjQuY291bnRyeSwKICAgICAgICAgICAgICAgICAgY2l0eTogZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RhdGEkdXNlcjUgPSBkYXRhLnVzZXIpID09PSBudWxsIHx8IF9kYXRhJHVzZXI1ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGF0YSR1c2VyNS5jaXR5LAogICAgICAgICAgICAgICAgICBhY2NvdW50VHlwZTogZGF0YSA9PT0gbnVsbCB8fCBkYXRhID09PSB2b2lkIDAgPyB2b2lkIDAgOiAoX2RhdGEkdXNlcjYgPSBkYXRhLnVzZXIpID09PSBudWxsIHx8IF9kYXRhJHVzZXI2ID09PSB2b2lkIDAgPyB2b2lkIDAgOiBfZGF0YSR1c2VyNi5hY2NvdW50VHlwZQogICAgICAgICAgICAgICAgfSk7CgogICAgICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMik7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGF1dGhvcml6YXRpb24oX3gzLCBfeDQpIHsKICAgICAgICByZXR1cm4gX2F1dGhvcml6YXRpb24uYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGF1dGhvcml6YXRpb247CiAgICB9KCksCiAgICBmZXRjaEN1cnJlbnRVc2VyOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfZmV0Y2hDdXJyZW50VXNlciA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTMoX3JlZjMpIHsKICAgICAgICB2YXIgY29tbWl0LCBfeWllbGQkcmVxdWVzdHMkZ2V0VXMsIGRhdGE7CgogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMyQoX2NvbnRleHQzKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0My5wcmV2ID0gX2NvbnRleHQzLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBjb21taXQgPSBfcmVmMy5jb21taXQ7CiAgICAgICAgICAgICAgICBfY29udGV4dDMucHJldiA9IDE7CiAgICAgICAgICAgICAgICBfY29udGV4dDMubmV4dCA9IDQ7CiAgICAgICAgICAgICAgICByZXR1cm4gcmVxdWVzdHMuZ2V0VXNlcigpOwoKICAgICAgICAgICAgICBjYXNlIDQ6CiAgICAgICAgICAgICAgICBfeWllbGQkcmVxdWVzdHMkZ2V0VXMgPSBfY29udGV4dDMuc2VudDsKICAgICAgICAgICAgICAgIGRhdGEgPSBfeWllbGQkcmVxdWVzdHMkZ2V0VXMuZGF0YTsKICAgICAgICAgICAgICAgIGNvbW1pdCgndXBkYXRlQ3VycmVudFVzZXInLCBkYXRhKTsKICAgICAgICAgICAgICAgIF9jb250ZXh0My5uZXh0ID0gMTI7CiAgICAgICAgICAgICAgICBicmVhazsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgX2NvbnRleHQzLnByZXYgPSA5OwogICAgICAgICAgICAgICAgX2NvbnRleHQzLnQwID0gX2NvbnRleHQzWyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcigndXNlci5qcyBmZXRjaEN1cnJlbnRVc2VyKCkgfCAnLCBfY29udGV4dDMudDApOwoKICAgICAgICAgICAgICBjYXNlIDEyOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQzLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUzLCBudWxsLCBbWzEsIDldXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGZldGNoQ3VycmVudFVzZXIoX3g1KSB7CiAgICAgICAgcmV0dXJuIF9mZXRjaEN1cnJlbnRVc2VyLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmZXRjaEN1cnJlbnRVc2VyOwogICAgfSgpCiAgfSwKICBnZXR0ZXJzOiB7CiAgICB1c2VyOiBmdW5jdGlvbiB1c2VyKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jdXJyZW50VXNlcjsKICAgIH0sCiAgICBjdXJyZW50Q29vcmRpbmF0ZXM6IGZ1bmN0aW9uIGN1cnJlbnRDb29yZGluYXRlcyhzdGF0ZSkgewogICAgICByZXR1cm4gc3RhdGUuY3VycmVudENvb3JkaW5hdGVzOwogICAgfQogIH0KfTsKZXhwb3J0IGRlZmF1bHQgdXNlcjs="},{"version":3,"sources":["/home/codex/client/src/store/modules/user.js"],"names":["setWithExpiry","requests","user","state","currentUser","currentCoordinates","lat","lng","mutations","updateCurrentUser","logout","localStorage","removeItem","updateCurrentCoordinates","coordinates","actions","registration","newUser","dispatch","response","status","email","password","authorization","userData","commit","data","token","_id","phoneNumber","country","city","accountType","fetchCurrentUser","getUser","console","error","getters"],"mappings":"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","sourcesContent":["import { setWithExpiry } from '../../helpers/helpers';\nimport requests from '../../services/requests';\n\nconst user = {\n  state: {\n    currentUser: null,\n    currentCoordinates: {\n      lat: 53.7169,\n      lng: 27.9775,\n    },\n  },\n  mutations: {\n    updateCurrentUser: function (state, user) {\n      state.currentUser = user;\n    },\n    logout: function (state) {\n      localStorage.removeItem('token');\n      state.currentUser = null;\n      state.currentCoordinates = {\n        lat: 53.7169,\n        lng: 27.9775,\n      };\n    },\n    updateCurrentCoordinates: function (state, coordinates) {\n      state.currentCoordinates = {\n        lat: coordinates.lat,\n        lng: coordinates.lng,\n      };\n    },\n  },\n  actions: {\n    registration: async function ({ dispatch }, newUser) {\n      const response = await requests.registration(newUser);\n      if (response.status === 201)\n        dispatch('authorization', {\n          email: newUser?.email,\n          password: newUser?.password,\n        });\n    },\n    authorization: async function ({ commit }, userData) {\n      const { data } = await requests.authorization(userData);\n      setWithExpiry('token', data.token);\n      commit('updateCurrentUser', {\n        _id: data?.user?._id,\n        email: data?.user?.email,\n        phoneNumber: data?.user?.phoneNumber,\n        country: data?.user?.country,\n        city: data?.user?.city,\n        accountType: data?.user?.accountType,\n      });\n    },\n    fetchCurrentUser: async function ({ commit }) {\n      try {\n        const { data } = await requests.getUser();\n        commit('updateCurrentUser', data);\n      } catch (error) {\n        console.error('user.js fetchCurrentUser() | ', error);\n      }\n    },\n  },\n  getters: {\n    user: state => state.currentUser,\n    currentCoordinates: state => state.currentCoordinates,\n  },\n};\n\nexport default user;\n"]}]}